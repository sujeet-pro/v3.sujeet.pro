---
import FormattedDate from '@/components/formatted-date.astro'
import Link from '@/components/link.astro'
import type { CollectionEntry } from 'astro:content'

type Props = {
  blog: CollectionEntry<'blog'>
  arrow?: 'to-left' | 'to-right' | 'none' | undefined
  headingLevel: 'h2' | 'h3'
}

const { blog, arrow = 'none', headingLevel: Hx } = Astro.props
const { title, description, publishedOn } = blog.data
const tagsClassNames = blog.data.tags.map((tagRef) => `tag-${tagRef.id}`)
const categoryClassNames = `category-${blog.data.category.id}`
---

<li
  class:list={[
    'px-4 py-4 relative flex flex-col gap-y-1 hover:shadow',
    ...tagsClassNames,
    categoryClassNames,
    'blog-item'
  ]}
>
  <Hx class='text-xl'>
    <Link
      href={`/blog/${blog.id}`}
      class="after:absolute after:top-0 after:left-0 after:right-0 after:bottom-0 after:content-[' '] flex items-center"
    >
      {arrow === 'to-left' ? <span class='mr-2'>←</span> : null}
      <span>{title}</span>
      {arrow === 'to-right' ? <span class='ml-2'>→</span> : null}
      {!publishedOn ? <span class='inline-block ml-2 px-1 border text-xs'>Draft</span> : null}
    </Link>
  </Hx>
  {
    publishedOn ? (
      <span class:list={['text-xs']}>
        <FormattedDate date={publishedOn} />
      </span>
    ) : null
  }
  <p>{description}</p>
</li>
