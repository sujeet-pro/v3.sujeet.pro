---
import type { MarkdownHeading } from 'astro'

type Props = {
  headings: MarkdownHeading[]
}
type NestedHeading = MarkdownHeading & { children: MarkdownHeading[] }
function nestedHeading(headings: MarkdownHeading[]): NestedHeading[] {
  const nested: NestedHeading[] = []
  let current: NestedHeading | null = null
  for (const heading of headings) {
    if (heading.depth === 2) {
      current = { ...heading, children: [] }
      nested.push(current)
    } else if (current) {
      current.children.push(heading)
    }
  }
  return nested
}
const nestedHeadings = nestedHeading(Astro.props.headings)
---

<nav class='toc'>
  <ul>
    {
      nestedHeadings.map((heading) => (
        <li>
          <a href={`#${heading.slug}`}>{heading.text}</a>
          <ul>
            {heading.children.map((child) => (
              <li>
                <a href={`#${child.slug}`}>{child.text}</a>
              </li>
            ))}
          </ul>
        </li>
      ))
    }
  </ul>
</nav>
